plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'

    id 'kotlin-kapt'

    id 'dagger.hilt.android.plugin'
}
def keyStorePropertiesFile = rootProject.file(PROPERTIES_PATH)
def keystoreProperties = new Properties()
if (keyStorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keyStorePropertiesFile))
}

android {
     if (keyStorePropertiesFile.exists()) {
        signingConfigs {
            release {
                storeFile file(keystoreProperties["KEYSTORE_PATH"])
                storePassword keystoreProperties["KEYSTORE_PASSWORD"]
                keyAlias keystoreProperties["KEY_ALIAS"]
                keyPassword keystoreProperties["KEYSTORE_KEY_PASSWORD"]
            }
        }
    }

    compileSdk 31

    defaultConfig {
        applicationId "com.example.saleschecker"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/shemas".toString()]
            }
        }
    }


    buildTypes {
        release {
            applicationIdSuffix ".release"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (keyStorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }

        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        debugNoLogin {
            applicationIdSuffix ".debug_no_login"
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes.each {
        it.buildConfigField 'String', 'IMAGE_BASE_URL', IMAGE_BASE_URL
        it.buildConfigField 'String', 'IMAGE_SECONDARY_URL', IMAGE_SECONDARY_URL
    }
}

//sourceSets {
//    androidTest {
//        java {
//            srcDirs(files("$projectDir/schemas".toString()))
//        }
//    }
//}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    //Tests
    //Remove Instrumented/physical?
    testImplementation 'junit:junit:4+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //Hilt
    def hilt_version = "2.40"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    //implementation "androidx.hilt:hilt-work:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    //kapt "androidx.hilt:hilt-compiler:$hilt_version"
    kapt("androidx.hilt:hilt-compiler:1.0.0")


    //Room
    def roomVersion = '2.4.1'
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //Retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    //Okhhttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.3"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    def lifecycleVersion = '2.4.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    //Navigation
    def nav_version = "2.4.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Glide
    def glide_version = '4.12.0'
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide_version}"

    // workmanager
    def workmanager_version = '2.7.1'
    implementation "androidx.work:work-runtime-ktx:${workmanager_version}"
}

kapt {
    correctErrorTypes true
}